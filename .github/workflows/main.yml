name: Test, Build and Upload artifact

on:
  push:
    branches: [ main ]

jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 8 ]
    name: Java ${{ matrix.java }} compile
    steps:
      - uses: actions/checkout@master

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: mvn -f pom.xml clean compile

  build:
    runs-on: ubuntu-latest
    needs: compile
    name: Java 8 build, deliver artifact and container
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: moviedb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v1

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Test and build project
        run: mvn -f pom.xml clean install


      - name: Upload Maven build artifact
        uses: actions/upload-artifact@v1
        with:
          name: genres-service-artifact.jar
          path: ./target/genres_ms-0.0.1-SNAPSHOT.jar

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/genres-service:latest .

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/genres-service:latest
